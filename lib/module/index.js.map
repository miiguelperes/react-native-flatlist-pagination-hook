{"version":3,"sources":["index.tsx"],"names":["React","FooterComponent","usePagination","pageSize","loadingMore","setLoadingMore","useState","pageIndex","setPageIndex","lastPageSize","setLastPageSize","data","setData","onEndReached","addData","pageData","length","resetData","hasMoreData","ListFooterComponent"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAAoD,mBAApD;;AA2BA,MAAMC,aAAiC,GAAG,CAACC,QAAQ,GAAG,EAAZ,KAAmB;AAG3D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,KAAK,CAACM,QAAN,CAAwB,KAAxB,CAAtC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,KAAK,CAACM,QAAN,CAAe,CAAf,CAAlC;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCV,KAAK,CAACM,QAAN,CAAuB,CAAvB,CAAxC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACM,QAAN,CAAsB,EAAtB,CAAxB;;AAOA,QAAMO,YAAY,GAAG,MAAM;AACzB,QAAIJ,YAAY,KAAKN,QAArB,EAA+B;AAC7BK,MAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACAF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GALD;;AAOA,QAAMS,OAAO,GAAIC,QAAD,IAAqB;AACnCH,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,GAAGI,QAAb,CAAD,CAAP;AACAL,IAAAA,eAAe,CAAC,CAAAK,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,MAAV,KAAoB,CAArB,CAAf;AACAX,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAJD;;AAOA,QAAMY,SAAS,GAAIN,IAAD,IAAiB;AACjCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,eAAe,CAAC,CAAAC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEK,MAAN,KAAgB,CAAjB,CAAf;AACAX,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAJD;;AAOA,QAAMa,WAAW,GAAG,EAAEP,IAAI,CAACK,MAAL,GAAc,CAAd,IAAmBP,YAAY,KAAKN,QAAtC,CAApB;AAGA,SAAO;AACLQ,IAAAA,IADK;AAELM,IAAAA,SAFK;AAGLH,IAAAA,OAHK;AAILD,IAAAA,YAJK;AAKLT,IAAAA,WALK;AAMLG,IAAAA,SANK;AAOLY,IAAAA,mBAAmB,EAAE,mBAAM,oBAAC,eAAD;AAAiB,MAAA,WAAW,EAAEf,WAA9B;AAA2C,MAAA,WAAW,EAAEc;AAAxD,MAPtB;AAQLA,IAAAA;AARK,GAAP;AAWD,CAhDD;;AAoDA,eAAehB,aAAf","sourcesContent":["import React from 'react';\nimport FooterComponent, {FooterComponentProps} from \"./FooterComponent\";\n\n\n\nexport type ReturnUsePaginationType = {\n  data: any[],\n  resetData: (data : any[]) => void,\n  addData: (data : any[]) => void,\n  loadingMore: boolean,\n  onEndReached: () => void,\n  pageIndex: number,\n  ListFooterComponent: React.FC<FooterComponentProps>,\n  hasMoreData: boolean,\n};\n\n\n\ntype usePaginationType = (pageSize? : number) => ReturnUsePaginationType;\n\n\n\n\n\n\n\n\n\nconst usePagination : usePaginationType = (pageSize = 10) => {\n\n\n  const [loadingMore, setLoadingMore] = React.useState<boolean>(false);\n  const [pageIndex, setPageIndex] = React.useState(0);\n  const [lastPageSize, setLastPageSize] = React.useState<number>(0);\n  const [data, setData] = React.useState<any[]>([]);\n\n\n\n\n\n\n  const onEndReached = () => {\n    if (lastPageSize === pageSize) {\n      setPageIndex(pageIndex + 1);\n      setLoadingMore(true);\n    }\n  }\n\n  const addData = (pageData: any[]) => {\n    setData([...data, ...pageData]);\n    setLastPageSize(pageData?.length || 0)\n    setLoadingMore(false)\n  };\n\n\n  const resetData = (data: any[]) => {\n    setData(data);\n    setLastPageSize(data?.length || 0)\n    setLoadingMore(false)\n  };\n\n\n  const hasMoreData = !(data.length > 0 && lastPageSize !== pageSize);\n\n\n  return {\n    data,\n    resetData,\n    addData,\n    onEndReached,\n    loadingMore,\n    pageIndex,\n    ListFooterComponent: () => <FooterComponent loadingMore={loadingMore} hasMoreData={hasMoreData}/>,\n    hasMoreData,\n  }\n\n}\n\n\n\nexport default usePagination;\n"]}